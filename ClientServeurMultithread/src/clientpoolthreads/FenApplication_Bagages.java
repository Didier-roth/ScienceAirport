/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientpoolthreads;

import ProtocolLUGAP.*;
import java.awt.Point;
import java.io.*;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author murad
 */

public class FenApplication_Bagages extends javax.swing.JFrame {

    private LUGAP lugap = null;
    private ObjectInputStream ois = null;
    private ObjectOutputStream oos = null;
    private Socket cliSock;
    private int port;
    
    DefaultListModel dlm; //
    
    /**
     * Creates new form FenAppClient
     */
    public FenApplication_Bagages() {
        setTitle("Application_Bagages");
        initComponents();
        lugap = new LUGAP();
        dlm = new DefaultListModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        TFAdresseServeur = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TFPortServeur = new javax.swing.JTextField();
        LabelPassword = new javax.swing.JLabel();
        LabelLogin = new javax.swing.JLabel();
        TFLogin = new javax.swing.JTextField();
        TFPassword = new javax.swing.JTextField();
        BConnect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListeVols = new javax.swing.JList();
        jLabelVols = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Adresse du serveur : ");

        TFAdresseServeur.setText("127.0.0.1");

        jLabel2.setText("Port du serveur :");

        TFPortServeur.setText("50000");

        LabelPassword.setText("Mot de passe :");

        LabelLogin.setText("Identifiant :");

        BConnect.setText("Connect");
        BConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BConnectActionPerformed(evt);
            }
        });

        ListeVols.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListeVolsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ListeVols);

        jLabelVols.setText("Liste des vols");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelVols)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(LabelLogin)
                            .addComponent(LabelPassword))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(TFLogin, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TFPortServeur, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(TFAdresseServeur)
                            .addComponent(TFPassword, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(83, 83, 83)
                        .addComponent(BConnect)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TFAdresseServeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TFPortServeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelLogin)
                    .addComponent(TFLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelPassword)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TFPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BConnect)))
                .addGap(47, 47, 47)
                .addComponent(jLabelVols)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void BConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BConnectActionPerformed
        // TODO add your handling code here:
        
        String adresse = TFAdresseServeur.getText();
        port = Integer.parseInt(TFPortServeur.getText());

        try
        {
        cliSock = new Socket(adresse, port);
        System.out.println(cliSock.getInetAddress().toString());
        }
        catch (UnknownHostException e)
        { System.err.println("Erreur ! Host non trouvé [" + e + "]"); }
        catch (IOException e)
        { System.err.println("Erreur ! Pas de connexion ? [" + e + "]"); }
        
        
        //ici on devra envoyer un objet Login sur le réseau
        
        Login login = new Login(TFLogin.getText(),TFPassword.getText());
        login.Affiche();
        lugap.setLogin(login);
        lugap.getLogin().Affiche();
        try 
        {
            oos = new ObjectOutputStream(cliSock.getOutputStream());
            System.out.println("Applications bagages envoie son login/password :");
            oos.writeObject(lugap);
            
            ois = new ObjectInputStream(cliSock.getInputStream());
            lugap = (LUGAP)ois.readObject();

        } catch (IOException ex) {
            Logger.getLogger(FenApplication_Bagages.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FenApplication_Bagages.class.getName()).log(Level.SEVERE, null, ex);
        }
             
        if(lugap.getLoginStatus())
        {
            dlm.addElement("VOL 362 POWDER-AIRLINES - Peshawar 6h30");
            dlm.addElement("VOL 714 WALABIES-AIRLINES - Sydney 5h30");
            dlm.addElement("VOL 152 AIR FRANCE CANAILLE - Paris 7h20");
        
            this.ListeVols.setModel(dlm); //on fait apparaitre la liste des vols
            System.out.println("OK");
        }
        else
        {
            System.out.println("Not OK");
            JOptionPane.showMessageDialog(this,"Login ou mot de passe incorrect","Connexion refusée",JOptionPane.ERROR_MESSAGE);
        }
        // remplir ici les vols
        
        
        
        
    }//GEN-LAST:event_BConnectActionPerformed

    private void ListeVolsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListeVolsMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
                 Point pnt = evt.getPoint();
                 int row = ListeVols.getSelectedIndex();
                 System.out.println("index = " + row);
                 String item = (String)ListeVols.getSelectedValue();
                 System.out.println("value = " + item);
                 DialBagages dial = new DialBagages(this,true); 
                 dial.setVisible(true);
                 //do something
             }
             else {
                 //do something else
             }
    }//GEN-LAST:event_ListeVolsMouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenApplication_Bagages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenApplication_Bagages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenApplication_Bagages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenApplication_Bagages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenApplication_Bagages().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BConnect;
    private javax.swing.JLabel LabelLogin;
    private javax.swing.JLabel LabelPassword;
    private javax.swing.JList ListeVols;
    private javax.swing.JTextField TFAdresseServeur;
    private javax.swing.JTextField TFLogin;
    private javax.swing.JTextField TFPassword;
    private javax.swing.JTextField TFPortServeur;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelVols;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}


 /* BENVOYER ANCIEN
        String chargeUtile = TFRequete.getText();
        RequeteSUM req = null;
        if (RBMail.isSelected())
        req = new RequeteSUM(RequeteSUM.REQUEST_E_MAIL, chargeUtile);
        else req = new RequeteSUM(RequeteSUM.REQUEST_TEMPORARY_KEY,
            chargeUtile);
        // Connexion au serveur
        ois=null; oos=null; cliSock = null;
        String adresse = TFAdresseServeur.getText();
        int port = Integer.parseInt(TFPortServeur.getText());

        try
        {
            cliSock = new Socket(adresse, port);
            System.out.println(cliSock.getInetAddress().toString());
        }

        catch (UnknownHostException e)
        { System.err.println("Erreur ! Host non trouvé [" + e + "]"); }
        catch (IOException e)
        { System.err.println("Erreur ! Pas de connexion ? [" + e + "]"); }

        // Envoie de la requête
        try
        {
            oos = new ObjectOutputStream(cliSock.getOutputStream());
            oos.writeObject(req); oos.flush();
        }
        catch (IOException e)
        { System.err.println("Erreur réseau ? [" + e.getMessage() + "]"); }
        // Lecture de la réponse
        ReponseSUM rep = null;
        try
        {
            ois = new ObjectInputStream(cliSock.getInputStream());
            rep = (ReponseSUM)ois.readObject();
            System.out.println(" *** Reponse reçue : " + rep.getChargeUtile());
        }
        catch (ClassNotFoundException e)
        { System.out.println("--- erreur sur la classe = " + e.getMessage()); }
        catch (IOException e)
        { System.out.println("--- erreur IO = " + e.getMessage()); }

        LReponse.setText(rep.getChargeUtile());

        */
